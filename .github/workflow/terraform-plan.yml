on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:

name: Plan
concurrency: tfstate

jobs:
  validate:
    name: "Terraform fmt & validate"
    runs-on:
      - self-hosted
      - terraform-1.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform fmt check
        run: terraform fmt -check -recursive -diff

      - name: Terraform validate
        run: |
          terraform init
          terraform validate
        working-directory: tf
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_FOR_PROVIDER }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

  plan:
    name: Terraform Plan
    runs-on:
      - self-hosted
      - terraform-1.0
    needs: validate
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Terraform fmt check
        run: terraform fmt -check -recursive -diff

      - name: Prepare secrets
        shell: bash
        working-directory: tf
        run: |
          echo $TF_BACKEND | base64 -d > backend.tfvars
        env:
          TF_BACKEND: ${{ secrets.TF_BACKEND }}

      - name: Terragrunt plan
        run: |
          set -o pipefail
          terraform init -backend-config=backend.tfvars
          terraform validate
          terraform plan -out tfplan.plan
          terraform show -no-color -json tfplan.plan > tfplan.json
        id: plan
        working-directory: tf
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_FOR_PROVIDER }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Comment on Pull Request
        uses: liatrio/terraform-change-pr-commenter@main
        with:
          json-file: tf/tfplan.json
